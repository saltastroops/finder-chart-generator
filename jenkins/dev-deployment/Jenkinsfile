@Library('saao-shared-library@run-python-tests') _

def success = true

pipeline {
  agent any
  stages {
    stage("Run tests") {
  agent {
    dockerfile {
      filename 'Dockerfile'
      dir 'jenkins/dev-deployment'
      args '-v finder-chart-generator-venv:/venv -u 0:0'
    }
  }
      steps {
        sh 'echo $PATH'
        sh 'poetry export -f requirements.txt --with dev --output requirements.txt'
        sh 'python -m pip install -r requirements.txt'
        script {
          success = saaoRunPythonTests 'black': ['fcg', 'tests'], 'pytest': ['tests'], 'junit': 'reports/junit', 'allure': 'reports/allure'
//             'bandit': ['fcg'],
//             'black': ['fcg', 'tests'],
//             'flake8': ['fcg', 'tests'],
//             'isort': ['fcg', 'tests'],
//             'mypy': ['fcg', 'tests'],
//             'pytest': ['tests']
//          )
        }
      }
    }
    stage("Show success status") {
      steps {
        echo "Success?: $success"
      }
    }
//     stage("Deploy the site") {
//       steps {
//         saaoDeployContainer(
//           host: "${FCG_DEV_HOST}",
//           hostCredentialsId: 'fcg-dev-server-credentials',
//           imageName: 'finder-chart-generator',
//           registryCredentialsId: 'docker-registry-credentials',
//           registryUrl: "${DOCKER_REGISTRY}"
//         )
//       }
//     }
  }

  post {
    always {
      allure includeProperties: false, jdk: '', results: [[path: 'reports/allure']]
      junit skipMarkingBuildUnstable: true, skipPublishingChecks: true, testResults: 'reports/junit/*.xml'

      //cleanWs()
    }
  }
}
